<Window x:Class="Desktop.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Math Toolkit" Height="600" Width="1000"
        WindowStyle="None" AllowsTransparency="True" Background="Transparent">

    <Window.Resources>
        <ResourceDictionary>
            <Style TargetType="{x:Type DataGrid}">
                <Setter Property="HeadersVisibility" Value="Column"/>
                <Setter Property="CanUserAddRows" Value="False"/>
                <Setter Property="CanUserDeleteRows" Value="False"/>
                <Setter Property="SelectionUnit" Value="Cell"/>
                <Setter Property="SelectionMode" Value="Single"/>
                <Setter Property="ColumnWidth" Value="SizeToCells"/>
                <Setter Property="AutoGenerateColumns" Value="True"/>
                <Setter Property="MinColumnWidth" Value="50"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="IsReadOnly" Value="False"/>
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
                <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <Border BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1" CornerRadius="6" Background="{DynamicResource BackgroundBrush}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" Background="{DynamicResource BorderBrush}" MouseLeftButtonDown="OnTitleBarMouseDown">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="90" />
                </Grid.ColumnDefinitions>

                <TextBlock Text="Math Toolkit" VerticalAlignment="Center" Margin="10,0,0,0" Foreground="{DynamicResource ForegroundBrush}" />

                <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="30" />
                    </Grid.ColumnDefinitions>

                    <Button Grid.Column="1" FontFamily="Segoe MDL2 Assets" Content="&#xE921;" Click="OnMinimizeClick" />
                    <Button Grid.Column="2" FontFamily="Segoe MDL2 Assets" Content="&#xE922;" Click="OnMaximizeClick" />
                    <Button Grid.Column="3" FontFamily="Segoe MDL2 Assets" Content="&#xE8BB;" Click="OnCloseClick" />
                </Grid>

            </Grid>

            <Grid Grid.Row="1" Margin="10" Background="{DynamicResource BackgroundBrush}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="250"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" Margin="0,0,10,0">
                    <TextBlock Text="Methods" FontWeight="Bold" Margin="0,0,0,10" FontSize="16" Foreground="{DynamicResource ForegroundBrush}"/>

                    <TreeView x:Name="MethodTree" Height="400" Loaded="MethodTree_Loaded" Background="{DynamicResource BackgroundBrush}" Foreground="{DynamicResource ForegroundBrush}">
                        <TreeViewItem Header="Matrix" Tag="section">
                            <TreeViewItem Header="─ Spectral Methods ─" Tag="section" FontWeight="Bold" IsHitTestVisible="False"/>
                            <TreeViewItem Header="Power Iteration"/>
                            <TreeViewItem Header="Inverse Iteration"/>
                            <TreeViewItem Header="Rayleigh Quotient Iteration"/>
                            <TreeViewItem Header="Jacobi Method"/>
                            <TreeViewItem Header="QR Method"/>
                            <TreeViewItem Header="LR Method"/>
                            <TreeViewItem Header="─ Polynomial Methods ─" Tag="section" FontWeight="Bold" IsHitTestVisible="False"/>
                            <TreeViewItem Header="Leverrier-Faddeev"/>
                            <TreeViewItem Header="Krylov Method"/>
                            <TreeViewItem Header="─ Decompositions ─" Tag="section" FontWeight="Bold" IsHitTestVisible="False"/>
                            <TreeViewItem Header="LU Decomposition"/>
                            <TreeViewItem Header="QR Decomposition"/>
                            <TreeViewItem Header="Cholesky Decomposition"/>
                            <TreeViewItem Header="SVD Decomposition"/>
                            <TreeViewItem Header="─ Matrix Analysis ─" Tag="section" FontWeight="Bold" IsHitTestVisible="False"/>
                            <TreeViewItem Header="Matrix Norms"/>
                            <TreeViewItem Header="Condition Number"/>
                            <TreeViewItem Header="Singular Values"/>
                            <TreeViewItem Header="Gershgorin Discs"/>
                            <TreeViewItem Header="Pseudo-Inverse"/>
                            <TreeViewItem Header="Determinant"/>
                            <TreeViewItem Header="Inverse Matrix"/>
                            <TreeViewItem Header="Transpose Matrix"/>
                            <TreeViewItem Header="Symmetrize Matrix"/>
                            <TreeViewItem Header="Matrix Rank"/>
                        </TreeViewItem>
                        <TreeViewItem Header="Linear Systems" Tag="section" >
                            <TreeViewItem Header="Gaussian Elimination"/>
                            <TreeViewItem Header="LU Decomposition"/>
                            <TreeViewItem Header="Jacobi Solver"/>
                            <TreeViewItem Header="Gauss-Seidel"/>
                        </TreeViewItem>
                        <TreeViewItem Header="Sorting" Tag="section">
                            <TreeViewItem Header="Bubble Sort"/>
                            <TreeViewItem Header="Quick Sort"/>
                        </TreeViewItem>
                    </TreeView>

                    <Button Content="Execute" Click="OnExecuteClick" Margin="0,10,0,0"/>
                    <ToggleButton x:Name="ThemeToggle" Width="32" Height="32" Margin="0,30,0,0" Click="OnThemeIconClick" ToolTip="Toggle Theme">
                        <TextBlock x:Name="ThemeIcon" FontSize="18" Text="☀"/>
                    </ToggleButton>
                </StackPanel>

                <StackPanel Grid.Column="1" Orientation="Vertical" Background="{DynamicResource BackgroundBrush}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <!-- A -->
                        <StackPanel Grid.Column="0" HorizontalAlignment="Center">
                            <TextBlock Text="Matrix A:" FontWeight="Bold"/>
                            <Border BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1" CornerRadius="4" Padding="2">
                                <DataGrid x:Name="MatrixGridA"
                                    AutoGenerateColumns="True"
                                    HeadersVisibility="Column" 
                                    CanUserAddRows="False"
                                    CanUserDeleteRows="False"
                                    SelectionUnit="Cell"
                                    SelectionMode="Single"
                                    Margin="0,5,0,5"
                                    HorizontalAlignment="Center"
                                    GridLinesVisibility="All"
                                    EnableRowVirtualization="True"

                                    Background="{DynamicResource BackgroundBrush}"
                                    Foreground="{DynamicResource ForegroundBrush}"
                                    BorderBrush="{DynamicResource BorderBrush}"
                                    RowBackground="{DynamicResource BackgroundBrush}"
                                    AlternatingRowBackground="{DynamicResource BackgroundBrush}"

                                    IsReadOnly="False"
                                    CanUserResizeColumns="False"
                                    CanUserResizeRows="False"
                                    RowHeaderWidth="0" />
                            </Border>
                        <StackPanel Orientation="Horizontal">
                            <Button Content="+" Tag="+A" Click="OnResizeClick" Width="40" Margin="0,0,5,0"/>
                            <Button Content="–" Tag="-A" Click="OnResizeClick" Width="40" Margin="0,0,5,0"/>
                            <Button Content="T" Tag="A" Click="OnTransposeClick" Width="40" Margin="0,0,5,0"/>
                            <Button Content="det" Tag="A" Click="OnDetClick" Width="50" Margin="0,0,5,0"/>
                            <Button Content="inv" Tag="A" Click="OnInverseClick" Width="50" Margin="0,0,5,0"/>
                            <Button Content="сlear" Tag="A" Click="OnClearClick" Width="60"/>
                        </StackPanel>
                            <Grid Margin="0,5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="50" />
                                </Grid.ColumnDefinitions>
                                <Button Content="To the power of ->" Tag ="A" Click="OnPowerClick" />
                                <TextBox x:Name="PowerBoxA" Grid.Column="1" Text="2" Margin="5,0,0,0"/>
                            </Grid>
                        </StackPanel>

                        <!-- Buttons -->
                        <StackPanel Grid.Column="1" Orientation="Vertical" VerticalAlignment="Center" Margin="15,0">
                            <Button Content="A + B" Click="OnAddMatricesClick" Margin="0,5"/>
                            <Button Content="A - B" Click="OnSubtractMatricesClick" Margin="0,5"/>
                            <Button Content="A × B" Click="OnMultiplyMatricesClick" Margin="0,5"/>
                        </StackPanel>

                        <!-- B -->
                        <StackPanel Grid.Column="2" HorizontalAlignment="Center">
                            <TextBlock Text="Matrix B:" FontWeight="Bold"/>
                            <Border BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1" CornerRadius="4" Padding="2">
                                <DataGrid x:Name="MatrixGridB"
                                    AutoGenerateColumns="True"
                                    HeadersVisibility="Column" 
                                    CanUserAddRows="False"
                                    CanUserDeleteRows="False"
                                    SelectionUnit="Cell"
                                    SelectionMode="Single"
                                    Margin="0,5,0,5"
                                    HorizontalAlignment="Center"
                                    GridLinesVisibility="All"
                                    EnableRowVirtualization="True"

                                    Background="{DynamicResource BackgroundBrush}"
                                    Foreground="{DynamicResource ForegroundBrush}"
                                    BorderBrush="{DynamicResource BorderBrush}"
                                    RowBackground="{DynamicResource BackgroundBrush}"
                                    AlternatingRowBackground="{DynamicResource BackgroundBrush}"

                                    IsReadOnly="False"
                                    CanUserResizeColumns="False"
                                    CanUserResizeRows="False"
                                    RowHeaderWidth="0" />
                            </Border>
                            <StackPanel Orientation="Horizontal">
                            <Button Content="+" Tag="+B" Click="OnResizeClick" Width="40" Margin="0,0,5,0"/>
                            <Button Content="–" Tag="-B" Click="OnResizeClick" Width="40" Margin="0,0,5,0"/>
                            <Button Content="T" Tag="B" Click="OnTransposeClick" Width="40" Margin="0,0,5,0"/>
                            <Button Content="det" Tag="B" Click="OnDetClick" Width="50" Margin="0,0,5,0"/>
                            <Button Content="inv" Tag="B" Click="OnInverseClick" Width="50" Margin="0,0,5,0"/>
                            <Button Content="сlear" Tag="B" Click="OnClearClick" Width="60"/>
                        </StackPanel>
                            <Grid Margin="0,5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="50" />
                                </Grid.ColumnDefinitions>
                                <Button Content="To the power of ->" Tag ="B" Click="OnPowerClick" />
                                <TextBox x:Name="PowerBoxB" Grid.Column="1" Text="2" Margin="5,0,0,0"/>
                            </Grid>

                        </StackPanel>
                    </Grid>

                    <!-- Result -->
                    <TextBlock Text="Result:" FontWeight="Bold" Margin="0,15,0,5"/>
                    <TextBox x:Name="ResultText"
                        Height="160"
                        TextWrapping="Wrap"
                        VerticalScrollBarVisibility="Auto"
                        Background="{DynamicResource BackgroundBrush}"
                        Foreground="{DynamicResource ForegroundBrush}"
                        BorderBrush="{DynamicResource BorderBrush}" />

                </StackPanel>
            </Grid>
        </Grid>
    </Border>
</Window>
